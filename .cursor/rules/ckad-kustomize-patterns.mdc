---
alwaysApply: true
---
# CKAD Kustomize Patterns

## CRITICAL: File Naming Convention
- **NEVER** use redundant resource kind in resource names
- **EXAMPLES**:
  - ✅ `backend` (Service) - NOT `backend-service`
  - ✅ `backend` (PVC) - NOT `backend-pvc`
- Keep resource names clean and non-repetitive
- **ALWAYS CHECK**: Does the resource name include its own kind? If yes, remove it!

## Kustomize Structure
- **namespace.yaml**: Only contains namespace definition, no namespace field in other resources
- **kustomization.yaml**: Handles namespace assignment and label injection
- **Labels**: Use the new label pairs of kustomize, `includeSelectors: true` and `includeTemplates: true` for proper label management

## CRITICAL: No Manual Labels in Resource Files
- **NEVER** add labels manually to resource files (deployment.yaml, service.yaml, etc.)
- **NEVER** add matchLabels or template labels manually
- **NEVER** add selector or labels fields at all - let kustomize handle everything
- Let kustomize handle ALL label injection through kustomization.yaml
- The `includeSelectors: true` and `includeTemplates: true` will inject labels into both selectors and pod templates

## Multi-Component Scenarios
For scenarios with multiple components (like network-policy):
```
setup/
├── namespace.yaml
├── kustomization.yaml
├── component1/
│   ├── deployment.yaml
│   ├── service.yaml
│   └── kustomization.yaml (with specific labels)
└── component2/
    ├── deployment.yaml
    ├── service.yaml
    └── kustomization.yaml (with specific labels)
```

## Resource Organization
- Separate resources into individual files
- Use component folders when different labels are needed
- Let kustomize handle namespace and label injection
- Never manually add namespace or labels to resource files

## Scenario Design
- **NO SOLUTION COMMENTS**: Never add comments that reveal what needs to be fixed
- **NO HANDHOLDING**: Let users figure out implementation details
- **Use Alpine images**: Prefer alpine images when no specific image is required
- **Clean resource files**: Focus on the task, not implementation hints